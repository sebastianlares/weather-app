{"version":3,"sources":["redux/weather/weatherTypes.js","redux/weather/weatherReducer.js","redux/rootReducer.js","redux/store.js","styles/styles.js","components/WeatherHeader/WeatherHeader.js","redux/weather/wheaterActions.js","components/Searchbar/Searchbar.js","components/DailyForecast/DailyForecast.js","components/WeeklyForecast/WeeklyForecast.js","components/loadingSpinner/LoadingSpinner.js","containers/MainContainer/MainContainer.js","App.js","index.js"],"names":["FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","initialState","loading","data","error","reducer","state","action","type","payload","rootReducer","combineReducers","weather","weatherReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","useStyles","makeStyles","theme","container","marginTop","background","height","display","paddingTop","flexDirection","alignItems","width","borderRadius","paddingBottom","breakpoints","up","down","paddingLeft","paddingRight","card","marginBottom","cardContent","justifyContent","icon","cardTyp","fontSize","search","position","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","cursor","inputRoot","color","inputInput","transition","transitions","create","alignBar","forecastContainer","padding","forecastItem","forecastContent","forecastImg","contentWeeklyForecast","weekTyp","textAlign","WeatherHeader","userData","current","humidity","condition","feelslike_c","wind_kph","text","location","region","name","classes","Card","className","CardContent","Typography","variant","style","src","alt","API_KEY","process","fetchDataRequest","fetchDataSuccess","fetchDataFailure","fetchLocationData","dispatch","axios","get","then","response","locationData","catch","message","Searchbar","useState","setLocation","useDispatch","useEffect","keyListener","event","console","log","code","document","addEventListener","removeEventListener","onClick","InputBase","placeholder","root","input","inputProps","onChange","e","target","value","DailyForecast","hour","forecastday","dayDate","Date","Intl","DateTimeFormat","weekday","year","month","day","format","Grid","spacing","map","d","index","item","align","WeekleyForecast","date_epoch","avghumidity","maxtemp_c","mintemp_c","daily_chance_of_rain","date","toLocaleDateString","LoadingSpinner","CircularProgress","MainContainer","fetchedData","useSelector","Container","maxWidth","length","forecast","WeeklyForecast","App","CssBaseline","navigator","geolocation","getCurrentPosition","loc","coords","latitude","longitude","weatherData","err","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b609343d.chunk.js","sourcesContent":["export const FETCH_DATA_REQUEST = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_FAILURE = \"FETCH_DATA_FAILURE\";\r\n","import {\r\n  FETCH_DATA_FAILURE,\r\n  FETCH_DATA_REQUEST,\r\n  FETCH_DATA_SUCCESS,\r\n} from \"./weatherTypes\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  data: [],\r\n  error: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_DATA_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        data: action.payload,\r\n        error: \"\",\r\n      };\r\n    case FETCH_DATA_FAILURE: {\r\n      return {\r\n        loading: false,\r\n        data: [],\r\n        error: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./weather/weatherReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: \"100px\",\r\n    background: \"#90b7d9\",\r\n    height: \"fit-content\",\r\n    display: \"flex\",\r\n    paddingTop: \"30px\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"fit-content\",\r\n    borderRadius: \"10px\",\r\n    paddingBottom: \"20px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingLeft: \"0px\",\r\n      paddingRight: \"0px\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  card: {\r\n    height: \"fit-content\",\r\n    width: \"100%\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  icon: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n  },\r\n  cardTyp: {\r\n    paddingLeft: \"20px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"15px\",\r\n      paddingLeft: \"2px\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    marginBottom: \"20px\",\r\n    width: \"300px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"300px\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    height: \"100%\",\r\n    marginLeft: \"270px\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  inputRoot: {\r\n    width: \"90%\",\r\n    color: \"inherit\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n  inputInput: {\r\n    paddingTop: \"6px\",\r\n    paddingBottom: \"6px\",\r\n    marginLeft: \"10px\",\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  alignBar: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  forecastContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"10px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  forecastItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  forecastContent: {\r\n    paddingTop: \"0\",\r\n    paddingBottom: \"0\",\r\n    paddingRight: \"5px\",\r\n    paddingLeft: \"5px\",\r\n  },\r\n  forecastImg: {\r\n    width: \"40px\",\r\n  },\r\n  contentWeeklyForecast: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    paddingTop: \"0\",\r\n    paddingBottom: \"0\",\r\n    paddingRight: \"5px\",\r\n    paddingLeft: \"5px\",\r\n    marginBottom: \"10px\",\r\n    [theme.breakpoints.down(500)]: {\r\n      flexDirection: \"column\",\r\n      marginBottom: \"20px\",\r\n    },\r\n  },\r\n  weekTyp: {\r\n    paddingLeft: \"40px\",\r\n    paddingTop: \"15px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingTop: \"15px\",\r\n      paddingLeft: \"0px\",\r\n      paddingBottom: \"10px\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"../../styles/styles\";\r\n\r\nconst WeatherHeader = ({ userData }) => {\r\n  const { humidity, condition, feelslike_c, wind_kph } = userData.current;\r\n  const { icon, text } = condition;\r\n  const { region, name } = userData.location;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"h6\"\r\n          className={classes.cardTyp}\r\n        >\r\n          Humidity: {humidity}%\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"h6\"\r\n          style={{ marginBottom: \"5px\" }}\r\n          className={classes.cardTyp}\r\n        >\r\n          {name}, {region}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          className={classes.cardTyp}\r\n          variant=\"h4\"\r\n        >\r\n          {feelslike_c}°C\r\n        </Typography>\r\n        <img src={icon} alt={icon} />\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          className={classes.cardTyp}\r\n          variant=\"h6\"\r\n        >\r\n          {text}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          className={classes.cardTyp}\r\n          variant=\"h6\"\r\n        >\r\n          Wind: {wind_kph} km/h\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherHeader;\r\n","import axios from \"axios\";\r\nimport {\r\n  FETCH_DATA_FAILURE,\r\n  FETCH_DATA_REQUEST,\r\n  FETCH_DATA_SUCCESS,\r\n} from \"./weatherTypes\";\r\n\r\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nexport const fetchDataRequest = () => {\r\n  return {\r\n    type: FETCH_DATA_REQUEST,\r\n  };\r\n};\r\nexport const fetchDataSuccess = (data) => {\r\n  return {\r\n    type: FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fetchDataFailure = (error) => {\r\n  return {\r\n    type: FETCH_DATA_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const fetchLocationData = (location) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchDataRequest);\r\n    axios\r\n      .get(\r\n        `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${location}&days=3`\r\n      )\r\n      .then((response) => {\r\n        const locationData = response.data;\r\n        dispatch(fetchDataSuccess(locationData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchDataFailure(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchInitialData = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchDataRequest);\r\n    const location = navigator.geolocation;\r\n    location.getCurrentPosition(\r\n      (loc) => {\r\n        const { coords } = loc;\r\n        axios\r\n          .get(\r\n            `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${coords.latitude},${coords.longitude}&days=3`\r\n          )\r\n          .then((response) => {\r\n            const weatherData = response.data;\r\n            dispatch(fetchDataSuccess(weatherData));\r\n          })\r\n          .catch((error) => {\r\n            dispatch(fetchDataFailure(error.message));\r\n          });\r\n      },\r\n      (err) => {\r\n        dispatch(fetchDataFailure(err.message));\r\n      }\r\n    );\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport useStyles from \"../../styles/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchLocationData } from \"../../redux/weather/wheaterActions\";\r\n\r\nconst Searchbar = () => {\r\n  const [location, setLocation] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const keyListener = (event) => {\r\n      console.log(location);\r\n      if (event.code === \"Enter\") dispatch(fetchLocationData(location));\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", keyListener);\r\n    return () => document.removeEventListener(\"keydown\", keyListener);\r\n  });\r\n\r\n  return (\r\n    <div className={classes.alignBar}>\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <SearchIcon onClick={() => dispatch(fetchLocationData(location))} />\r\n        </div>\r\n        <InputBase\r\n          placeholder=\"Search…\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n          onChange={(e) => setLocation(e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useStyles from \"../../styles/styles\";\r\nimport { CardContent } from \"@material-ui/core\";\r\n\r\nconst DailyForecast = ({ userData }) => {\r\n  const { hour } = userData.forecastday[0];\r\n  const classes = useStyles();\r\n  const dayDate = new Date();\r\n\r\n  return (\r\n    <Card style={{ marginBottom: \"20px\" }}>\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        style={{ paddingLeft: \"30px\", paddingTop: \"10px\" }}\r\n      >\r\n        Daily Forecast:\r\n        {new Intl.DateTimeFormat(\"en-US\", {\r\n          weekday: \"long\",\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n        }).format(dayDate)}\r\n      </Typography>\r\n      <Grid container className={classes.forecastContainer} spacing={1}>\r\n        {hour.map((d, index) => {\r\n          const { feelslike_c, condition } = d;\r\n          return (\r\n            <Grid item key={index} className={classes.forecastItem}>\r\n              <CardContent className={classes.forecastContent}>\r\n                <Typography color=\"textPrimary\" variant=\"body2\" align=\"center\">\r\n                  {index}:00\r\n                </Typography>\r\n                <img\r\n                  src={condition.icon}\r\n                  alt={condition.icon}\r\n                  className={classes.forecastImg}\r\n                />\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body2\"\r\n                  align=\"center\"\r\n                >\r\n                  {feelslike_c}°\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DailyForecast;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useStyles from \"../../styles/styles\";\r\nimport { CardContent } from \"@material-ui/core\";\r\n\r\nconst WeekleyForecast = ({ userData }) => {\r\n  const { forecastday } = userData;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <Grid container style={{ flexDirection: \"column\" }} spacing={1}>\r\n        <Typography color=\"textSecondary\" className={classes.weekTyp}>\r\n          Next Days Forecast\r\n        </Typography>\r\n        {forecastday.map((d, index) => {\r\n          const { date_epoch, day } = d;\r\n          const {\r\n            avghumidity,\r\n            condition,\r\n            maxtemp_c,\r\n            mintemp_c,\r\n            daily_chance_of_rain,\r\n          } = day;\r\n          const { icon } = condition;\r\n          let date = new Date(date_epoch * 1000);\r\n          date = date.toLocaleDateString();\r\n\r\n          return (\r\n            <Grid item key={index}>\r\n              <CardContent\r\n                className={classes.contentWeeklyForecast}\r\n                style={{ paddingBottom: \"0px\" }}\r\n              >\r\n                <Typography color=\"textSecondary\" align=\"left\">\r\n                  {date}\r\n                </Typography>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    style={{ paddingRight: \"10px\" }}\r\n                  >\r\n                    {maxtemp_c}°\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\">{mintemp_c}°</Typography>\r\n                </div>\r\n\r\n                <Typography color=\"textSecondary\">\r\n                  Humidity: {avghumidity}%\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Rain chance:\r\n                  {daily_chance_of_rain}%\r\n                </Typography>\r\n                <img src={icon} alt={icon} />\r\n              </CardContent>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeekleyForecast;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n    paddingTop: \"300px\",\r\n  },\r\n}));\r\n\r\nexport default function LoadingSpinner() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress style={{ height: \"65px\", width: \"65px\" }} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport WeatherHeader from \"../../components/WeatherHeader/WeatherHeader\";\r\nimport useStyles from \"../../styles/styles\";\r\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\r\nimport DailyForecast from \"../../components/DailyForecast/DailyForecast\";\r\nimport WeeklyForecast from \"../../components/WeeklyForecast/WeeklyForecast\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingSpinner from \"../../components/loadingSpinner/LoadingSpinner\";\r\n\r\nconst MainContainer = () => {\r\n  const fetchedData = useSelector((state) => state.weather);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {fetchedData.loading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <Container maxWidth=\"md\" className={classes.container}>\r\n          <Searchbar />\r\n          {fetchedData.error.length !== 0 ? (\r\n            <h2>{fetchedData.error}</h2>\r\n          ) : (\r\n            <>\r\n              <WeatherHeader userData={fetchedData.data} />\r\n              <DailyForecast userData={fetchedData.data.forecast} />\r\n              <WeeklyForecast userData={fetchedData.data.forecast} />\r\n            </>\r\n          )}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import \"./App.css\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport MainContainer from \"./containers/MainContainer/MainContainer\";\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <MainContainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport { fetchInitialData } from \"./redux/weather/wheaterActions\";\n\nstore.dispatch(fetchInitialData());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}